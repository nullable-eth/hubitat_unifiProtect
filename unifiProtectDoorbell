/*

Copyright 2020 - tomw

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-------------------------------------------

Change history:

1.3.6 - tomw - Improved event handling
1.3.4 - tomw - Added light support and "isDark" attribute on cameras and lights
1.2.0 - tomw - Added doorbell LCD message support
1.0.0 - tomw - Initial release

*/

metadata
{
    definition(name: "UniFi Protect Doorbell", namespace: "tomw", author: "tomw", importUrl: "")
    {
        capability "Notification"
        capability "PushableButton"
        
        command "push", ["number"]
        command "clearNotification"
        
        attribute "isDark", "enum", [true, false]
    }
}

def installed()
{
    sendEvent(name: "numberOfButtons", value: 1)
}

def processEvent(event)
{
    if(!event)
    {
        return
    }
    
    // if we have a button push event, register it
    if(event.type == "ring")
    {
        push(1)
    }
}

def push(number = 1)
{
    sendEvent(name: "pushed", value: number, isStateChange: true)
}

def deviceNotification(text)
{
    updateDoorbell([lcdMessage: [type: "CUSTOM_MESSAGE", text: text, resetAt: null]])
}

def clearNotification()
{
    updateDoorbell([lcdMessage: [resetAt: 0]])
}

def updateDoorbell(dataMap)
{
    try
    {
        getParent()?.httpExecWithAuthCheck("PATCH", parent?.genParamsMain(getDoorbellUrlSuffix(), new groovy.json.JsonOutput().toJson(dataMap)), true)
    }
    catch (Exception e)
    {
        log.debug "updateDoorbell(${dataMap}) failed: ${e.message}"
    }
}

def getDoorbellUrlSuffix()
{
    def id = device.getDeviceNetworkId()?.split('-')?.getAt(0)
    def baseUrlSuffix = "/proxy/protect/api/cameras/" + id
    
    return baseUrlSuffix
}
